# Generated by Django 3.2.9 on 2022-01-24 18:11

import comic.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tagulous.models.fields
import tagulous.models.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=0, help_text="Leave it as '0' to be determined automatically or specify any number (must be unique)", unique=True)),
                ('title', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecretPanel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('published', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date published')),
                ('key_phrase', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='secrets')),
                ('archive_text', models.CharField(blank=True, help_text="Overrides 'Archive' button glitching text", max_length=200)),
                ('howto_text', models.CharField(blank=True, help_text="Overrides 'How to Play' button glitching text", max_length=200)),
                ('vote_text', models.CharField(blank=True, help_text="Overrides 'Read + Vote at' label glitching text", max_length=200)),
                ('donate_text', models.CharField(blank=True, help_text="Overrides 'Donate + Vote Further at' label glitching text", max_length=200)),
            ],
            options={
                'ordering': ['published'],
            },
        ),
        migrations.CreateModel(
            name='PanelTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='ComicPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=0, help_text="Leave it as '0' to be determined automatically or specify any number (must be unique)", unique=True)),
                ('published', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date published')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('alt', models.CharField(blank=True, help_text="Replaces image if it can't be loaded; can be used to hide secrets in HTML", max_length=100, verbose_name='Alt text')),
                ('image', models.ImageField(upload_to='panels')),
                ('page', models.ForeignKey(default=comic.models.Page.get_default_pk, on_delete=django.db.models.deletion.CASCADE, related_name='panels', to='comic.page')),
                ('tags', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text='Enter a comma-separated tag string', space_delimiter=False, to='comic.PanelTag')),
            ],
            options={
                'ordering': ['number'],
                'abstract': False,
            },
        ),
    ]
